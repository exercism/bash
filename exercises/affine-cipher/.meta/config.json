{
  "solution_files": [
    "affine_cipher.sh"
  ],
  "tests": [
    {
      "name": "encode yes",
      "cmd": "bash affine_cipher.sh encode 5 7 \"yes\""
    },
    {
      "name": "encode no",
      "cmd": "bash affine_cipher.sh encode 15 18 \"no\""
    },
    {
      "name": "encode OMG",
      "cmd": "bash affine_cipher.sh encode 21 3 \"OMG\""
    },
    {
      "name": "encode O M G",
      "cmd": "bash affine_cipher.sh encode 25 47 \"O M G\""
    },
    {
      "name": "encode mindblowingly",
      "cmd": "bash affine_cipher.sh encode 11 15 \"mindblowingly\""
    },
    {
      "name": "encode numbers",
      "cmd": "bash affine_cipher.sh encode 3 4 \"Testing,1 2 3, testing.\""
    },
    {
      "name": "encode deep thought",
      "cmd": "bash affine_cipher.sh encode 5 17 \"Truth is fiction.\""
    },
    {
      "name": "encode all the letters",
      "cmd": "bash affine_cipher.sh encode 17 33 \"The quick brown fox jumps over the lazy dog.\""
    },
    {
      "name": "encode with a not coprime to m",
      "cmd": "bash affine_cipher.sh encode 6 17 \"This is a test.\""
    },
    {
      "name": "decode exercism",
      "cmd": "bash affine_cipher.sh decode 3 7 \"tytgn fjr\""
    },
    {
      "name": "decode a sentence",
      "cmd": "bash affine_cipher.sh decode 19 16 \"qdwju nqcro muwhn odqun oppmd aunwd o\""
    },
    {
      "name": "decode numbers",
      "cmd": "bash affine_cipher.sh decode 25 7 \"odpoz ub123 odpoz ub\""
    },
    {
      "name": "decode all the letters",
      "cmd": "bash affine_cipher.sh decode 17 33 \"swxtj npvyk lruol iejdc blaxk swxmh qzglf\""
    },
    {
      "name": "decode with no spaces in input",
      "cmd": "bash affine_cipher.sh decode 17 33 \"swxtjnpvyklruoliejdcblaxkswxmhqzglf\""
    },
    {
      "name": "decode with too many spaces",
      "cmd": "bash affine_cipher.sh decode 15 16 \"vszzm cly yd cg qdp\""
    },
    {
      "name": "decode with a not coprime to m",
      "cmd": "bash affine_cipher.sh decode 13 5 \"Test\""
    }
  ]
}
